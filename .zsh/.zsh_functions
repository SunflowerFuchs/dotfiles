#!/usr/bin/env zsh

# function to create a local backup of files
bu() { cp $@ $@.backup-`date +%Y%m%d`; }

# pretty-print csv files
function pretty_csv {
    column -t -s, -n "$@" | less -F -S -X -K
}

# pretty-print tsv files
function pretty_tsv {
    column -t -s $'\t' -n "$@" | less -F -S -X -K
}

# add alias for unzip to always unzip into separate directory
function unzip {
    # test if file was given
    [[ $# -lt 1 ]] && echo "" && return

    for f in $@; do
        # check if the file ends in .zip, and if not, copy it and add _extracted.zip
        renamed=false
        if [ "${f}" = "${f%.zip}" ]; then
            cp "${f}" "${f}_extracted.zip"
            f="${f}_extracted.zip"
            renamed=true
        fi

        list=$(/usr/bin/zipinfo -1 $1)

        # check if file contains single file, then we can just unzip as is
        filecount=$(echo "${list}" | wc -l)
        if [[ ${filecount} -eq 1 ]]; then
            /usr/bin/unzip "${f}"
            continue
        fi

        # check if everything in the file is already in a subfolder, then we can just unzip as is
        folder=$(echo "${list}" | head -1)
        notInFolder=$(echo "${list}" | grep -ve "^${folder}" | wc -l)
        if [[ ${notInFolder} -eq 0 ]]; then
            /usr/bin/unzip "${f}"
            continue
        fi

        # in any other case we unzip into a subfolder
        # pattern matching to remove .zip at the end
        /usr/bin/unzip "${f}" -d "${f%.zip}"

        if $renamed; then
            rm ${f}
        fi
    done
}

# show the weather
function wttr {
    local request="wttr.in/${1-$WTTR_LOCATION}?${2-m}"
    [ "$COLUMNS" -lt 125 ] && request+='&n'
    curl -H "Accept-Language: ${LANG%_*}" --compressed "$request"
}

# load additional function files
if [[ -n $(ls -A $ZDOTDIR/.zsh_functions.d/ 2>/dev/null) ]];then
    for f in $ZDOTDIR/.zsh_functions.d/*; do
        source "$f"
    done
fi
