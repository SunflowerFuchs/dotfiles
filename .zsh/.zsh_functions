#!/usr/bin/env zsh

# function to create a local backup of files
bu() { cp $@ $@.backup-`date +%Y%m%d`; }

# pretty-print csv files
function pretty_csv {
    column -t -s, -n "$@" | less -F -S -X -K
}

# pretty-print tsv files
function pretty_tsv {
    column -t -s $'\t' -n "$@" | less -F -S -X -K
}

# add alias for unzip to always unzip into separate directory
function unzip {
    # test if file was given
    [[ $# -lt 1 ]] && echo "" && return

    for f in $@; do
        name=$(echo $@ | sed 's/.zip$//')

        list=$(/usr/bin/zipinfo -1 $1)

        # check if file contains single file, then we can just unzip as is
        filecount=$(echo "${list}" | wc -l)
        if [[ ${filecount} -eq 1 ]]; then
            /usr/bin/unzip "${name}.zip"
            continue
        fi

        # check if everything in the file is already in a subfolder, then we can just unzip as is
        folder=$(echo "${list}" | head -1)
        notInFolder=$(echo "${list}" | grep -ve "^${folder}" | wc -l)
        if [[ ${notInFolder} -eq 0 ]]; then
            /usr/bin/unzip "${name}.zip"
            continue
        fi

        # in any other case we unzip into a subfolder
        /usr/bin/unzip "${name}.zip" -d "$name"
    done
}

# reset git repo to last commit
function gr {
    read "choice?Reset repo? [Y/n] "
    choice=${choice:l} #tolower
    case "$choice" in
      y|yes ) git reset --hard HEAD;;
      * ) return;;
    esac
}

# call mkcert with each domain name set in nginx/sites-enabled/
function mkcert-quick {
    mkcert -cert-file ~/Documents/certificates/local/my.dev.lamapoll.pem -key-file ~/Documents/certificates/local/my.dev.lamapoll-key.pem $(ag 'server_name' --follow --nonumbers --group /etc/nginx/sites-enabled/ | ag 'server_name( [a-zA-Z0-9.]+)+' | ag --invert-match '^\s*#' | perl -0p -e 's/(?:server_name )(.+)(?:;)/$1/g' | tr ' ' '\n' | tr -d '\t ' | sort | uniq | ag '^[A-Za-z0-9\.]+$' | tr '\n' ' ' | awk '{print $0" localhost"}')
}

# show the weather
function wttr {
    local request="wttr.in/${1-Berlin}"
    [ "$COLUMNS" -lt 125 ] && request+='?n'
    curl -H "Accept-Language: ${LANG%_*}" --compressed "$request"
}

# print a random assortment of / and \ forever
function wallpaper { while true; do printf "\u$((2571 + ($RANDOM & 1)))"; done }

if [[ -n $(ls -A $ZDOTDIR/.zsh_functions.d/ 2>/dev/null) ]];then
    for f in $ZDOTDIR/.zsh_functions.d/*; do
        source "$f"
    done
fi
